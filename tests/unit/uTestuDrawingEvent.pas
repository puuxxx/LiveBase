unit uTestuDrawingEvent;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit 
  being tested.

}

interface

uses
  TestFramework, uEventModel, uExceptions, uVarArrays, Graphics, uDrawingCommand,
  uDrawingEvent, uGraphicPrimitive, Variants;

type
  // Test methods for class TDrawingCommandData

  TestTDrawingCommandData = class(TTestCase)
  strict private
    FPrimitive : TGraphicPrimitive;
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure TestCreateData;
    procedure TestExtractPrimitive;
    procedure TestExtractColor;
    procedure TestAny;
  end;

implementation

procedure TestTDrawingCommandData.SetUp;
begin
  FPrimitive := TGraphicPrimitive.Create( nil );
end;

procedure TestTDrawingCommandData.TearDown;
begin
  FPrimitive.Free;
  FPrimitive := nil;
end;

procedure TestTDrawingCommandData.TestAny;
var
  Ok : boolean;
begin
  Ok := false;
  try
    TDrawingCommandData.CreateData( '', 123 );
  except
    Ok := true;
  end;

  Check( OK );
end;

procedure TestTDrawingCommandData.TestCreateData;
var
  ReturnValue: Variant;
  aData: Variant;
begin
  aData := 11;

  ReturnValue := TDrawingCommandData.CreateData( FPrimitive.IDAsStr, aData );
  Check( VarIsArray( ReturnValue ) );

  ReturnValue := TDrawingCommandData.CreateData( FPrimitive.IDAsStr, [ aData ] );
  Check( VarIsArray( ReturnValue ) );
end;

procedure TestTDrawingCommandData.TestExtractPrimitive;
var
  Data: Variant;
begin
  Data := TDrawingCommandData.CreateData( FPrimitive.IDAsStr, 'xyz' );
  Check( VarIsArray( Data ) );

  CheckEqualsString (FPrimitive.IDAsStr, TDrawingCommandData.ExtractPrimitiveID( Data ) );
end;

procedure TestTDrawingCommandData.TestExtractColor;
var
  ReturnValue: Variant;
  aData: Variant;
begin
  ReturnValue := TDrawingCommandData.CreateData( FPrimitive.IDAsStr, clRed );
  Check( VarIsArray( ReturnValue ) );

  Check( TDrawingCommandData.ExtractColor( aData ) = clRed );
end;

initialization
  // Register any test cases with the test runner
  RegisterTest(TestTDrawingCommandData.Suite);
end.

